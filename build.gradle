plugins {
    id 'maven'
    id 'scala'
    id 'java'
    id 'idea'
    id 'eclipse'

    id 'com.github.ben-manes.versions' version "0.17.0"
    id "com.github.maiflai.scalatest" version "0.19"
    id 'nebula.maven-publish' version '5.1.5'
    id 'nebula.source-jar' version '5.1.5'
    id 'nebula.javadoc-jar' version '5.1.5'

}

group = theGroup
version = theVersion
description = theDescription
sourceCompatibility = javaVersion
targetCompatibility = javaVersion


repositories {
    mavenCentral()
    jcenter()
}

configurations {
    provided
    compile.extendsFrom provided
}

def dseDriverVersion = '1.4.1'
def scalaVersion = '2.12'

dependencies {

    compile group: 'com.datastax.dse', name: 'dse-java-driver-core', version: dseDriverVersion
    compile group: 'com.datastax.dse', name: 'dse-java-driver-graph', version: dseDriverVersion
    compile group: 'com.github.nscala-time', name: "nscala-time_${scalaVersion}", version: '2.18.0'
    compile group: 'com.fasterxml.jackson.module', name: "jackson-module-scala_${scalaVersion}", version: '2.9.1'
    compile group: 'org.hdrhistogram', name: 'HdrHistogram', version: '2.1.10'

    provided group: 'org.scala-lang', name: 'scala-library', version: "${scalaVersion}.4"
    provided group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: '2.3.0'

    testCompile group: 'org.fusesource', name: 'sigar', version: '1.6.4'
    testCompile group: 'org.scalatest', name: "scalatest_${scalaVersion}", version: '3.0.4'
    testCompile group: 'org.easymock', name: 'easymock', version: '3.5'
    testCompile group: "org.cassandraunit", name: "cassandra-unit", version: "3.3.0.2"
    testCompile group: 'org.pegdown', name: 'pegdown', version: '1.6.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}

jar {

    baseName = theName
    version = theVersion

    from((configurations.runtime - configurations.provided).collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }

    manifest {
        attributes 'Implementation-Title': theName,
                'Implementation-Version': theVersion,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version')
    }
}


publishing {

    if (project.hasProperty('datastaxPublishingSnapshotRepositoryUrl') || project.hasProperty('datastaxPublishingRepositoryUrl')) {

        if (project.hasProperty('datastaxPublishUsername') && project.hasProperty('datastaxPublishPassword')) {

            publications {
                nebula(MavenPublication) {
                    pom.withXml { xml ->
                        def licensesNode = xml.asNode()?.licenses
                        if (!licensesNode) {
                            licensesNode = xml.asNode().appendNode('licenses')
                        }
                        def apache = licensesNode.appendNode('license')
                        apache.appendNode('name', 'Datastax License')
                        apache.appendNode('url', 'https://github.com/datastax/gatling-dse-plugin/blob/master/LICENSE.md')
                    }
                }
            }

            repositories {
                maven {
                    name = 'Datastax'
                    url version.endsWith('-SNAPSHOT') ? datastaxSnapshotRepositoryUrl : datastaxPublishingRepositoryUrl
                    credentials {
                        username datastaxPublishUsername
                        password datastaxPublishPassword
                    }
                }
            }
        }
    }
}
